{"ast":null,"code":"import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\nconst initialState = {\n  counter: 0,\n  showCounter: true\n};\ncreateSlice({\n  name: 'counter',\n  initialState: initialState,\n  reducers: {\n    increment(state) {\n      state.counter++;\n    },\n\n    decrement(state) {\n      state.counter--;\n    },\n\n    increase(state, action) {\n      state.counter = state.counter + action.amount;\n    },\n\n    toggleCounter(state) {\n      state.showCounter = !state.showCounter;\n    }\n\n  }\n});\n\nconst counterReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === \"increment\") {\n    return {\n      counter: state.counter + 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'increase') {\n    return {\n      counter: state.counter + action.amount,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === \"decrement\") {\n    return {\n      counter: state.counter - 1,\n      showCounter: state.showCounter\n    };\n  }\n\n  if (action.type === 'toggle') {\n    return {\n      showCounter: !state.showCounter,\n      counter: state.counter\n    };\n  }\n\n  return state;\n};\n\nconst store = createStore(counterReducer);\nexport default store;","map":{"version":3,"sources":["/Users/aristelamarku/Development/bootcamp/phase-5/Redux-project/src/store/index.js"],"names":["createStore","createSlice","initialState","counter","showCounter","name","reducers","increment","state","decrement","increase","action","amount","toggleCounter","counterReducer","type","store"],"mappings":"AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,WAAT,QAA4B,kBAA5B;AAEA,MAAMC,YAAY,GAAG;AAACC,EAAAA,OAAO,EAAC,CAAT;AAAYC,EAAAA,WAAW,EAAC;AAAxB,CAArB;AAEAH,WAAW,CAAC;AACVI,EAAAA,IAAI,EAAE,SADI;AAEVH,EAAAA,YAAY,EAAGA,YAFL;AAGVI,EAAAA,QAAQ,EAAE;AACVC,IAAAA,SAAS,CAACC,KAAD,EAAO;AACZA,MAAAA,KAAK,CAACL,OAAN;AACH,KAHS;;AAIVM,IAAAA,SAAS,CAACD,KAAD,EAAO;AACdA,MAAAA,KAAK,CAACL,OAAN;AACD,KANS;;AAOVO,IAAAA,QAAQ,CAACF,KAAD,EAAOG,MAAP,EAAc;AAClBH,MAAAA,KAAK,CAACL,OAAN,GAAcK,KAAK,CAACL,OAAN,GAAcQ,MAAM,CAACC,MAAnC;AACH,KATS;;AAUVC,IAAAA,aAAa,CAACL,KAAD,EAAO;AAChBA,MAAAA,KAAK,CAACJ,WAAN,GAAkB,CAACI,KAAK,CAACJ,WAAzB;AACH;;AAZS;AAHA,CAAD,CAAX;;AAmBA,MAAMU,cAAc,GAAG,YAAiC;AAAA,MAAhCN,KAAgC,uEAAxBN,YAAwB;AAAA,MAAVS,MAAU;;AACpD,MAAGA,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAM;AACFZ,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAgB,CADtB;AAEFC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFjB,KAAN;AAIH;;AACD,MAAGO,MAAM,CAACI,IAAP,KAAe,UAAlB,EAA6B;AACxB,WAAM;AACFZ,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAcQ,MAAM,CAACC,MAD3B;AAEFR,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFjB,KAAN;AAIJ;;AAED,MAAGO,MAAM,CAACI,IAAP,KAAgB,WAAnB,EAA+B;AAC3B,WAAM;AACFZ,MAAAA,OAAO,EAACK,KAAK,CAACL,OAAN,GAAc,CADpB;AAEFC,MAAAA,WAAW,EAAEI,KAAK,CAACJ;AAFjB,KAAN;AAIH;;AAED,MAAGO,MAAM,CAACI,IAAP,KAAgB,QAAnB,EAA4B;AACxB,WAAM;AACFX,MAAAA,WAAW,EAAC,CAACI,KAAK,CAACJ,WADjB;AAEFD,MAAAA,OAAO,EAAEK,KAAK,CAACL;AAFb,KAAN;AAIH;;AACD,SAAOK,KAAP;AACH,CA5BD;;AA8BA,MAAMQ,KAAK,GAAEhB,WAAW,CAACc,cAAD,CAAxB;AAEA,eAAeE,KAAf","sourcesContent":["import { createStore } from \"redux\";\nimport { createSlice } from \"@reduxjs/toolkit\";\n\nconst initialState = {counter:0, showCounter:true}\n\ncreateSlice({\n  name: 'counter',\n  initialState : initialState,\n  reducers: {\n  increment(state){\n      state.counter++\n  },\n  decrement(state){\n    state.counter--\n  },\n  increase(state,action){\n      state.counter=state.counter+action.amount\n  },\n  toggleCounter(state){\n      state.showCounter=!state.showCounter\n  }\n }\n })\n\nconst counterReducer = (state = initialState, action) =>{\n    if(action.type === \"increment\"){\n        return{\n            counter:state.counter + 1,\n            showCounter: state.showCounter\n        }\n    }\n    if(action.type ==='increase'){\n         return{\n             counter:state.counter+action.amount,\n             showCounter: state.showCounter\n         }\n    }\n\n    if(action.type === \"decrement\"){\n        return{\n            counter:state.counter-1,\n            showCounter: state.showCounter\n        }\n    }\n\n    if(action.type === 'toggle'){\n        return{\n            showCounter:!state.showCounter,\n            counter: state.counter\n        }\n    }\n    return state\n}\n\nconst store =createStore(counterReducer)\n\nexport default store;"]},"metadata":{},"sourceType":"module"}